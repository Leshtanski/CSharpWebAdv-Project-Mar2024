@using Microsoft.AspNetCore.Identity
@using TennisShopSystem.Data.Models
@using TennisShopSystem.Services.Data.Interfaces
@using TennisShopSystem.Web.Infrastructure.Extensions
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@inject ISellerService SellerService
@{
    bool isUserSeller = await SellerService.SellerExistByUserIdAsync(this.User.GetId());
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        if (!isUserSeller || this.User.IsAdmin())
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="ShoppingCart" asp-action="ViewCart">Cart</a>
            </li>
        }
        if (!isUserSeller)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Seller" asp-action="Become">Become Seller</a>
            </li>
        }
        <li class="nav-item">
            <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="ShoppingCart" asp-action="ViewCart">Cart</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
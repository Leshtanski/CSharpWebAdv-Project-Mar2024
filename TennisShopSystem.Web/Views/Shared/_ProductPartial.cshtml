@using TennisShopSystem.Services.Data.Interfaces
@using TennisShopSystem.Web.Infrastructure.Extensions
@using TennisShopSystem.Data
@using TennisShopSystem.Data.Models
@using Microsoft.EntityFrameworkCore
@model ProductAllViewModel

@inject ISellerService SellerService
@inject TennisShopDbContext dbContext
@{
    bool isUserSeller = await SellerService.SellerExistByUserIdAsync(this.User.GetId()!);
    bool isSellerTheOwnerOfTheProduct = await SellerService.IsSellerWithUserIdOwnerOfProductWithIdAsync(Model.Id, this.User.GetId());

    List<OrderedItem> currentSellerSoldItems = await this.dbContext
        .OrderedItems
        .Where(oi => oi.ProductId == Model.Id)
        .ToListAsync();

    int currentSoldItemCopies = 0;

    foreach (var item in currentSellerSoldItems)
    {
        currentSoldItemCopies += item.OrderedQuantity;
    }
}

<div class="col-md-4">
    <div class="card mb-3">
        <input type="hidden" value="@Model.Id" />
        <img class="card-img-top" src="@Model.ImageUrl" alt="Product Image">
        <div class="card-body text-center">
            <h4>@Model.Title</h4>
            <h6>
                Price Per Item:
                <b>BGN @($"{Model.Price:f2}")</b>
            </h6>
            @if ((isUserSeller && isSellerTheOwnerOfTheProduct) || this.User.IsAdmin())
            {
                <h6>
                    Copies in stock:
                    <b>@($"{Model.AvailableQuantity}")</b>
                </h6>

                if (currentSoldItemCopies > 0)
                {
                    <h6>
                        Sold Copies:
                        <b>@currentSoldItemCopies</b>
                    </h6>
                }

                if (Model.IsAvailable)
                {
                    <h6>Currently: Available</h6>
                }
                else
                {
                    <h6>Currently: Unavailable</h6>
                }
            }
            <br/>

            @if (!isUserSeller || this.User.IsAdmin())
            {
                <a class="btn btn-primary" asp-controller="ShoppingCart" asp-action="AddToCart" asp-route-id="@Model.Id">Add to Cart</a>
            }
            <a asp-area="" asp-controller="Product" asp-action="Details" asp-route-id="@Model.Id" class="btn btn-success">Details</a>

            @if (this.User.Identity?.IsAuthenticated ?? false)
            {
                if ((isUserSeller && isSellerTheOwnerOfTheProduct) || this.User.IsAdmin())
                {
                    <a asp-area="" asp-controller="Product" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">Edit</a>
                    <a asp-area="" asp-controller="Product" asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">Delete</a>
                }
            }
        </div>
    </div>
</div>
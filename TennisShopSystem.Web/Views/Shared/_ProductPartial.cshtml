@using TennisShopSystem.Services.Data.Interfaces
@using TennisShopSystem.Web.Infrastructure.Extensions
@model ProductAllViewModel

@inject ISellerService SellerService
@{
    bool isUserSeller = await SellerService.SellerExistByUserIdAsync(this.User.GetId());
    bool isSellerTheOwnerOfTheProduct = await SellerService.IsSellerWithUserIdOwnerOfProductWithIdAsync(Model.Id, this.User.GetId());
}

<div class="col-md-4">
    <div class="card mb-3">
        <input type="hidden" value="@Model.Id" />
        <img class="card-img-top" src="@Model.ImageUrl" alt="Product Image">
        <div class="card-body text-center">
            <h4>@Model.Title</h4>
            <h6>
                Price Per Item:
                <b>BGN @($"{Model.Price:f2}")</b>
            </h6>
            @if (isUserSeller && isSellerTheOwnerOfTheProduct)
            {
                <h6>
                    Available Quantity:
                    <b>@($"{Model.AvailableQuantity}")</b>
                </h6>
            }
            <br/>

            @if (!isUserSeller)
            {
                <a class="btn btn-primary" asp-controller="ShoppingCart" asp-action="AddToCart" asp-route-id="@Model.Id">Add to Cart</a>
            }
            <a asp-controller="Product" asp-action="Details" asp-route-id="@Model.Id" class="btn btn-success">Details</a>

            @if (this.User.Identity?.IsAuthenticated ?? false)
            {
                if (isUserSeller && isSellerTheOwnerOfTheProduct)
                {
                    <a asp-controller="Product" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">Edit</a>
                    <a asp-controller="Product" asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">Delete</a>
                }
            }
        </div>
    </div>
</div>